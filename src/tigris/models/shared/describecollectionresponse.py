"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import collectionmetadata as shared_collectionmetadata
from dataclasses_json import Undefined, dataclass_json
from tigris import utils
from typing import Optional



@dataclasses.dataclass
class DescribeCollectionResponseSchema:
    r"""Schema of this collection."""
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class DescribeCollectionResponse:
    r"""A detailed description of the collection. The description returns collection metadata and the schema."""
    collection: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('collection'), 'exclude': lambda f: f is None }})
    r"""Name of the collection."""
    metadata: Optional[shared_collectionmetadata.CollectionMetadata] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata'), 'exclude': lambda f: f is None }})
    schema: Optional[DescribeCollectionResponseSchema] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('schema'), 'exclude': lambda f: f is None }})
    r"""Schema of this collection."""
    size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('size'), 'exclude': lambda f: f is None }})
    r"""The size of this collection in bytes."""
    

